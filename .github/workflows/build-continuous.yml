name: Verification

on:
  pull_request:
    branches:
    - master

env:
  cache-version: v1
  LN_BUILD_FROM_CI: 1

jobs:
      
  #==============================================================================
  Native-MSVC2019-x64-MT:
    runs-on: windows-2019

    steps:
    - name: Checkout
      uses: actions/checkout@v1

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 2.2.108

    - name: Cache (build/BuildCache)
      uses: actions/cache@v1
      with:
        path: ./build/MSVC2019-x64-MT/BuildCache
        key: ${{ env.cache-version }}-BuildCache-${{ hashFiles('**/BuildEnvironment.cs') }}
            
    - name: Cache (build/MSVC2019-x64-MT/ExternalInstall)
      uses: actions/cache@v1
      with:
        path: ./build/MSVC2019-x64-MT/ExternalInstall
        key: ${{ env.cache-version }}-ExternalInstall-${{ hashFiles('**/BuildExternalProjects.cs') }}
            
    - name: Build
      run: |
        dotnet run -- BuildExternalProjects MSVC2019-x64-MT
        dotnet run -- BuildEngine_MSVC MSVC2019-x64-MT
      
    - uses: actions/upload-artifact@v1
      with:
        name: LuminoEngine-MSVC2019-x64-MT
        path: ./build/MSVC2019-x64-MT/EngineInstall

  #==============================================================================
  Native-Web:
    runs-on: windows-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v1

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 2.2.108

    - name: Common build cache (build/BuildCache)
      uses: actions/cache@v1
      with:
        path: ./build/BuildCache
        key: ${{ env.cache-version }}-BuildCache-${{ hashFiles('**/BuildEnvironment.cs') }}
            
    - uses: actions/cache@v1.0.3
      with:
        path: ./build/Emscripten/emsdk
        key: ${{ env.cache-version }}-emsdk-${{ hashFiles(format('{0}{1}', github.workspace, '/tools/LuminoBuild/EmscriptenBuildEnv.cs')) }}
        restore-keys: |
          ${{ env.cache-version }}-emsdk-
          
    - name: Build
      run: |
        dotnet run -- BuildExternalProjects Emscripten
        dotnet run -- BuildEngine_Emscripten Emscripten
      

  #==============================================================================
  Native-Android:
    runs-on: windows-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v1

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 2.2.108

    - name: Common build cache (build/BuildCache)
      uses: actions/cache@v1
      with:
        path: ./build/BuildCache
        key: ${{ env.cache-version }}-BuildCache-${{ hashFiles('**/BuildEnvironment.cs') }}
            
    - name: Build
      run: |
        dotnet run -- BuildExternalProjects Android-x86_64
        dotnet run -- BuildEngine_Android

  #==============================================================================
  Native-macOS:
    runs-on: macos-11.0

    steps:
    - name: Checkout
      uses: actions/checkout@v1

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 2.2.108

    - name: Common build cache (build/BuildCache)
      uses: actions/cache@v1
      with:
        path: ./build/BuildCache
        key: ${{ env.cache-version }}-BuildCache-${{ hashFiles('**/BuildEnvironment.cs') }}
            
    - name: Build
      run: |
        dotnet run -- BuildExternalProjects macOS
        dotnet run -- BuildEngine_macOS

  #==============================================================================
#  Native-iOS:
#    runs-on: macos-11.0

#    steps:
#    - name: Checkout
#      uses: actions/checkout@v1

#    - name: Setup .NET Core
#      uses: actions/setup-dotnet@v1
#      with:
#        dotnet-version: 2.2.108

#    - name: Common build cache (build/BuildCache)
#      uses: actions/cache@v1
#      with:
#        path: ./build/BuildCache
#        key: ${{ env.cache-version }}-BuildCache-${{ hashFiles('**/BuildEnvironment.cs') }}
            
#    - name: Build
#      run: |
#        dotnet run -- BuildExternalProjects iOS-OS64
#        dotnet run -- BuildExternalProjects iOS-SIMULATOR64
#        dotnet run -- BuildEngine_iOS
